/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mystique;

import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author hp
 */
public class formEncode extends javax.swing.JDialog {

   static BufferedImage img = null;
   int MaxX, MaxY, i, j;
    public formEncode(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setIconImage(new javax.swing.ImageIcon(getClass().getResource("/images/icon.png")).getImage());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Encoding - Mystique");
        setBounds(new java.awt.Rectangle(400, 22, 0, 0));
        setPreferredSize(new java.awt.Dimension(670, 658));
        setResizable(false);

        jLabel1.setText("Image: ");

        jButton1.setText("Browse");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel2.setText("Text to be hidden: ");

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.setText("Please choose an image first.......");
        jTextArea1.setEnabled(false);
        jTextArea1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextArea1KeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(jTextArea1);

        jLabel3.setText("Image Chosen: ");

        jLabel4.setRequestFocusEnabled(false);

        jButton2.setText("Encode");
        jButton2.setEnabled(false);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Reset");
        jButton3.setEnabled(false);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Cancel");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel5.setForeground(new java.awt.Color(51, 102, 255));
        jLabel5.setText("Go to Decoding>>>>>");
        jLabel5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel5MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(16, 16, 16)
                                .addComponent(jButton1))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 528, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jButton2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jButton3)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jButton4)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel5)
                                        .addGap(25, 25, 25))
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(116, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 367, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 154, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton3)
                    .addComponent(jButton4))
                .addGap(20, 20, 20))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
private void check()
{
    if(jTextArea1.getText().length()==0)
    {
        jButton3.setEnabled(false);
        jButton2.setEnabled(false);
    }
    else
    {
        jButton2.setEnabled(true);
        jButton3.setEnabled(true);
    }
}
 private void embedLength(int MessageLength) {
        int Count = 0;
        for (; i < MaxX && Count < 32;) {
            for (; j < MaxY && Count < 32; j++, Count++) {
                int rgb = img.getRGB(i, j);
                int LenBit = CommonFunctions.getBit(MessageLength, Count);
                rgb = CommonFunctions.setBit(rgb, 0, LenBit);
                img.setRGB(i, j, rgb);
            }
            
            if(j==MaxY)
            {
                j=0;
                i++;
            }
            
        }
    }
private void embedPin(int pin)
{
    int Count = 0;
        for (i = 0; i < MaxX && Count < 32;) {
            for (j=0; j < MaxY && Count < 32; j++, Count++) {
                int rgb = img.getRGB(i, j);
                int LenBit = CommonFunctions.getBit(pin, Count);
                rgb = CommonFunctions.setBit(rgb, 0, LenBit);
                img.setRGB(i, j, rgb);
            }
            
            if(j==MaxY)
            {
                j=0;
                i++;
            }
            
        }

}
    private void embedMessage(byte message) {
        int Count = 0;
        for (; i < MaxX && Count < 8;) {
            for (; j < MaxY && Count < 8; j++, Count++) {
                int rgb = img.getRGB(i, j);
                int Bit = CommonFunctions.getBit((int) message, Count);
                rgb = CommonFunctions.setBit(rgb, 0, Bit);
                img.setRGB(i, j, rgb);    
            }

            if(j==(MaxY))
            {    
                j=0;
                i++;
            }

        }
    }
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        JFileChooser jfc = new JFileChooser();
        jfc.setFileSelectionMode(JFileChooser.FILES_ONLY);
        jfc.addChoosableFileFilter(new FileNameExtensionFilter("Images", "jpeg", "jpg", "png", "bmp", "gif", "dib"));
        jfc.setAcceptAllFileFilterUsed(false);
        int ret = jfc.showOpenDialog(this);

        if (ret == JFileChooser.APPROVE_OPTION) {
            try {
                File file = jfc.getSelectedFile();

                img = ImageIO.read(file);
                
                Image dimg =  img.getScaledInstance(528, 370, Image.SCALE_SMOOTH);

                jLabel4.setIcon(new ImageIcon(dimg));
                jTextArea1.setText("");
                jTextArea1.setEnabled(true);
                check();
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(rootPane, "Cannot open selected image!", "Steganography", JOptionPane.WARNING_MESSAGE);
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jLabel5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel5MouseClicked
        this.dispose();
        formDecode obj =new formDecode(Mystique.form1,true);
        obj.setVisible(true);
        
    }//GEN-LAST:event_jLabel5MouseClicked

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
         jTextArea1.setText("");
       jButton2.setEnabled(false);
       jButton3.setEnabled(false);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jTextArea1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextArea1KeyReleased
        check();
    }//GEN-LAST:event_jTextArea1KeyReleased

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        int p=0;
        String message = jTextArea1.getText();
        int MessageLength = message.length();
        MaxY = img.getHeight();
        MaxX = img.getWidth();
        int pixels = MaxX * MaxY;
        if (((MessageLength * 8) + 64) > pixels) {
            JOptionPane.showMessageDialog(rootPane, "Message connot ne encoded in this picture, kindly choose a larger picture", "Mystique", JOptionPane.WARNING_MESSAGE);
        } else {
            Pin obj =new Pin(Mystique.form1,true);
            obj.setVisible(true);
            String pin=obj.send();
            p = Integer.parseInt(pin);
            embedPin(p);
            embedLength(MessageLength);
            byte[] bytes = message.getBytes();
            for (byte msg : bytes) {
                embedMessage(msg);
            }
            jButton2.setEnabled(false);
         JFileChooser jfc = new JFileChooser();
         jfc.setAcceptAllFileFilterUsed(false);
         jfc.addChoosableFileFilter(new FileNameExtensionFilter("PNG (*.png)", "png"));
         jfc.addChoosableFileFilter(new FileNameExtensionFilter("JPEG (*.jpg;*.jpeg;*.jpe;*.jfif)", "jpg"));
         jfc.addChoosableFileFilter(new FileNameExtensionFilter("GIF (*.gif)", "gif"));
         jfc.addChoosableFileFilter(new FileNameExtensionFilter("Bitmap (*.bmp;*.dib)", "bmp"));
         jfc.setFileFilter(jfc.getChoosableFileFilters()[0]);
         int ret = jfc.showSaveDialog(this);
         if(ret==JFileChooser.APPROVE_OPTION)
         {
            try{
            File name;
            name = new File(jfc.getSelectedFile().getCanonicalPath()+"."+((FileNameExtensionFilter)jfc.getFileFilter()).getExtensions()[0]);
            ImageIO.write(formEncode.img, "png",name);
            JOptionPane.showMessageDialog(rootPane, "Image has been saved.", "Mystique", 1);
            this.dispose();
            }
            catch(IOException ex)
            {
                
            }
         }
        }
    }//GEN-LAST:event_jButton2ActionPerformed
public static void main(String args[])
{
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(formEncode.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
       //</editor-fold>
       
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(() -> {
            formEncode dialog = new formEncode(new javax.swing.JFrame(), true);
            dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                @Override
                public void windowClosing(java.awt.event.WindowEvent e) {
                    System.exit(0);
                }
            });
            dialog.setVisible(true);
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
}
